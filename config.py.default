import os

# from huey import RedisHuey
basedir = os.path.abspath(os.path.dirname(__file__))

# queue = RedisHuey("indexer", host="localhost", port=6379)


class Config:
    APP_NAME = 'Yapper'
    TABLE_PREFIX = 'cms'
    USER_PREFIX = '/u'
    BLOG_PREFIX = '/blog'
    SECRET_KEY = os.environ.get('SECRET_KEY') or 'somethingsecret'
    SQLALCHEMY_COMMIT_ON_TEARDOWN = True
    FLASKY_ADMIN = os.environ.get('FLASKY_ADMIN') or 'admin@example.com'
    WTF_CSRF_ENABLED = True
    WTF_CSRF_SECRET_KEY = os.environ.get('CSRF_KEY') or 'secretcsrf'
    POSTS_PER_PAGE = 10
    GA_TRACKING_ID = None
    DOMAINS = ['domain1.com', 'domain2.com']
    THEME = 'default'
    MAIL_HOST = 'smtp.mandrillapp.com'
    MAIL_PORT = 587
    MAIL_TO = ['bugs@gmail.com']
    MAIL_FROM = 'admin@gmail.com'
    MAIL_USERNAME = 'tech@gmail.com'
    MAIL_PASSWORD = 'aaasa-JxxQ'

    @staticmethod
    def init_app(app):
        pass


class DevConfig(Config):
    DEBUG = True
    SQLALCHEMY_ECHO = True
    SQLALCHEMY_DATABASE_URI = os.environ.get('DEV_DATABASE_URL') or \
        'sqlite:///' + os.path.join(basedir, 'data-dev.db')


class TestConfig(DevConfig):
    DEBUG = True
    TESTING = True
    WTF_CSRF_ENABLED = False
    CSRF_ENABLED = False
    SQLALCHEMY_ECHO = False
    SQLALCHEMY_DATABASE_URI = os.environ.get('TEST_DATABASE_URL') or \
        'sqlite:///' + os.path.join(basedir, 'data-test.db')


class ProdConfig(Config):
    DEBUG = False
    TESTING = False
    WTF_CSRF_ENABLED = True
    CSRF_ENABLED = True
    GA_TRACKING_ID = 'UA-95223174-1'
    SQLALCHEMY_DATABASE_URI = os.environ.get('PROD_DATABASE_URL') or \
        'sqlite:///' + os.path.join(basedir, 'data-prod.db')


config = {
    'dev': DevConfig,
    'test': TestConfig,
    'prod': ProdConfig,
    'default': DevConfig
}
